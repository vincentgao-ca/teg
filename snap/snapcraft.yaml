name: teg
version: 0.9.1
summary: A graphql server for 3D printers
description: >
  Teg is an experimental 3D printing software designed from the ground up to streamline your 3D printing experience. Teg features a print queue that enables users to easily queue up prints without managing complicated file systems. To manage prints remotely Teg is built on top of encrypted, distributed web technologies so you can use your 3D printer from anywhere in the world just as easily as from your home. With Teg you can worry less and create more.

base: core20
build-base: core18
# confinement: classic
confinement: devmode
# confinement: strict
grade: stable

architectures:
  - build-on: amd64
    run-on: amd64
  - build-on: armhf
    run-on: armhf

    # plugs:
#   klipper-printers:
#     interface: system-files
#     read:
#     - /tmp
#     - /tmp/printer
#     write:
#     - /tmp/printer

# passthrough:
layout:
  /var/lib/teg:
    bind: $SNAP_DATA/var
  /etc/teg:
    bind: $SNAP_DATA/etc

hooks:
  install:
    plugs:
      - account-control

# see https://docs.snapcraft.io/node-apps/6747
parts:
  # teg:
  #   plugin: nodejs
  #   nodejs-version: 12.11.1
  #   override-build: |
  #     export PATH=$PATH:$(pwd)/../npm/bin
  #
  #     yarn pkg:build
  #
  #     rsync -a --include="*.node" --include="*/" --exclude="*" --prune-empty-dirs ./node_modules ./pruned
  #     rm -rf ./packages
  #
  #     cp ./teg ../install/teg
  #     cp -r ./pruned/node_modules ../install/
  #   build-packages:
  #     - rsync
  #     - python
  #   source: https://github.com/tegapp/teg.git
  #   source-type: git
  #   source-branch: feature/printer-process
  #   source-depth: 1
  #   build-attributes: [no-patchelf]


  teg:
    plugin: dump
    source: .
    source:
      - to armhf: teg-server-bin/armv7/
      - to amd64: teg-server-bin/x64/
    build-attributes: [no-patchelf]

  teg-marlin:
    plugin: dump
    source:
      - to armhf: teg-marlin-bin/armv7/
      - to amd64: teg-marlin-bin/x64/

  teg-auth:
    plugin: dump
    source:
      - to armhf: teg-auth-bin/armv7/
      - to amd64: teg-auth-bin/x64/
    # TODO: how do you add apt dependencies
    # Also you need to set up postgres: https://gist.github.com/p1nox/4953113
    # Also `diesel db setup`
    stage-packages:
      - to armhf:
          # - "sqlite3:armhf"
        - postgresql:armhf
        - libpq-dev:armhf
        - libsqlite3-dev:armhf
        - sqlite3:armhf
      - else:
        # - "sqlite3"
        - postgresql
        - libpq-dev
        - libsqlite3-dev
        - sqlite3

  # https://snapcraft.io/blog/the-smart-dump-plugin
  webrtc-streamer:
    plugin: dump
    source:
      - to amd64: https://github.com/mpromonet/webrtc-streamer/releases/download/v0.2.4/webrtc-streamer-v0.2.4-Linux-x86_64-Release.tar.gz
      - to armhf: https://github.com/mpromonet/webrtc-streamer/releases/download/v0.2.4/webrtc-streamer-v0.2.4-Linux-armv7l-Release.tar.gz
    stage-packages:
      - to armhf:
        - libgtk-3-0:armhf
        - libasound2:armhf
      - else:
        - libgtk-3-0
        - libasound2

  # teg-marlin:
  #   plugin: rust
  #   source: https://github.com/tegapp/teg.git
  #   source-type: git
  #   source-branch: feature/printer-process
  #   source-subdir: packages/teg-marlin

apps:
  server:
    command: teg serve
    daemon: simple
    restart-condition: always
    refresh-mode: endure
    # stop-mode: sigusr2
    plugs:
      # - klipper-printers
      - network
      - network-bind
      - process-control
      - system-observe
      - hardware-observe
      - hardware-random-control
  marlin:
    environment:
      RUST_LOG: info,teg_marlin=debug,teg_marlin::gcode_codec=trace,teg_marlin::protobuf_server
      RUST_BACKTRACE: 1
    command: teg-marlin
    daemon: simple
    restart-condition: always
    refresh-mode: endure
    # stop-mode: sigusr2
    plugs:
      # - klipper-printers
      - network
      - network-bind
      - process-control
      - system-observe
      - hardware-observe
      - hardware-random-control
      - raw-usb
      - gpio
      - gpio-memory-control
  add-invite:
    environment:
      RUST_ENV: production
      RUST_BACKTRACE: 1
      DATABASE_URL: sqlite:///etc/teg/database.db
      FIREBASE_PROJECT_ID: tegapp-dev
      PORT: 33005
      RUST_LOG: INFO
    command: teg-add-invite
  auth:
    environment:
      RUST_ENV: production
      RUST_BACKTRACE: 1
      DATABASE_URL: sqlite:///etc/teg/database.db
      FIREBASE_PROJECT_ID: tegapp-dev
      PORT: 33005
      RUST_LOG: INFO
    command: teg-auth
    daemon: simple
    restart-condition: always
    plugs:
      - network-bind
  webrtc-streamer:
    adapter: full
    command: webrtc-streamer -H 127.0.0.1:8009
    daemon: simple
    plugs: [network-bind]
